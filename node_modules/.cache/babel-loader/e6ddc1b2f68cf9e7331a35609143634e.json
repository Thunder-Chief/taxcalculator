{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\dndle\\\\Desktop\\\\taxcalculator\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Tax from './components/tax_logic.jsx';\n\nfunction App() {\n  // const [count, setCount] = useState(null);\n  // const [taxBracket, setTaxBracket] = useState(null);\n  // const [buttonState, setButtonState] = useState(true);\n  // const [totalEarnings, setTotalEarnings] = useState(null);\n  const inputHandler = e => {\n    const rawInputData = e.target.value;\n    taxCalcs(rawInputData);\n    setTotalEarnings(rawInputData.toLocaleString('en-US'));\n  }; // let amount = '';\n\n\n  const taxCalcs = amount => {\n    let totalTaxPayment = ''; // Tax Rates Based on 2022 rates.\n    // 18%\n\n    if (amount > 1 && amount < 216200) {\n      totalTaxPayment = amount * 0.18;\n      setTaxBracket(0.18);\n    } // 26%\n\n\n    if (amount > 216201 && amount < 337800) {\n      totalTaxPayment = (amount - 216200) * 0.26 + 38916;\n      setTaxBracket(0.26);\n    } // 31%\n\n\n    if (amount > 337801 && amount < 467500) {\n      totalTaxPayment = (amount - 337800) * 0.31 + 70532;\n      setTaxBracket(0.31);\n    } // 36%\n\n\n    if (amount > 467501 && amount < 613600) {\n      totalTaxPayment = amount - 467500 * 0.36 + 110739;\n      setTaxBracket(0.36);\n    } // 39%\n\n\n    if (amount > 613601 && amount < 782200) {\n      totalTaxPayment = amount - 613600 * 0.39 + 163335;\n      setTaxBracket(0.39);\n    } // 41%\n\n\n    if (amount > 782201 && amount < 1656600) {\n      totalTaxPayment = amount - 782200 * 0.41 + 229089;\n      setTaxBracket(0.41);\n    } // 45%\n\n\n    if (amount > 1656601) {\n      totalTaxPayment = amount * 0.45 + 587593;\n      setTaxBracket(0.45);\n    }\n\n    if (buttonState) {\n      setCount(totalTaxPayment / 12);\n    }\n\n    if (!buttonState) {\n      setCount(totalTaxPayment);\n    }\n  }; // let buttonState = true;\n\n\n  const buttonHandler = e => {\n    // buttonState = !buttonState;\n    setButtonState(!buttonState);\n    console.log(buttonState); // setCount(count / 12);\n    // console.log(count);\n\n    e.preventDefault();\n\n    if (buttonState) {\n      setCount(count * 12);\n    } else setCount(count / 12);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Income Tax Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tax, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), !count && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enter Income and Submit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 18\n    }, this), taxBracket && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your tax Bracket is \", taxBracket * 100, \"%, tax needing to be paid per a year is R\", count * 12]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your gross monthly salary is R\", (totalEarnings / 12).toLocaleString('en-US'), \" your take home monthly salary is R\", (totalEarnings / 12 - count).toLocaleString('en-US')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), count && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Annual Earning is \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }, this), \" R\", totalEarnings]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: inputHandler,\n        type: \"number\",\n        className: \"todo-input\",\n        placeholder: \"Monthly Salary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/dndle/Desktop/taxcalculator/src/App.js"],"names":["React","useState","Tax","App","inputHandler","e","rawInputData","target","value","taxCalcs","setTotalEarnings","toLocaleString","amount","totalTaxPayment","setTaxBracket","buttonState","setCount","buttonHandler","setButtonState","console","log","preventDefault","count","taxBracket","totalEarnings"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Tax from './components/tax_logic.jsx';\r\n\r\nfunction App() {\r\n  // const [count, setCount] = useState(null);\r\n  // const [taxBracket, setTaxBracket] = useState(null);\r\n  // const [buttonState, setButtonState] = useState(true);\r\n  // const [totalEarnings, setTotalEarnings] = useState(null);\r\n\r\n  const inputHandler = (e) => {\r\n    const rawInputData = e.target.value;\r\n    taxCalcs(rawInputData);\r\n    setTotalEarnings(rawInputData.toLocaleString('en-US'));\r\n  };\r\n\r\n  // let amount = '';\r\n\r\n  const taxCalcs = (amount) => {\r\n    let totalTaxPayment = '';\r\n    // Tax Rates Based on 2022 rates.\r\n\r\n    // 18%\r\n    if (amount > 1 && amount < 216200) {\r\n      totalTaxPayment = amount * 0.18;\r\n      setTaxBracket(0.18);\r\n    }\r\n    // 26%\r\n    if (amount > 216201 && amount < 337800) {\r\n      totalTaxPayment = (amount - 216200) * 0.26 + 38916;\r\n      setTaxBracket(0.26);\r\n    }\r\n    // 31%\r\n    if (amount > 337801 && amount < 467500) {\r\n      totalTaxPayment = (amount - 337800) * 0.31 + 70532;\r\n      setTaxBracket(0.31);\r\n    }\r\n    // 36%\r\n    if (amount > 467501 && amount < 613600) {\r\n      totalTaxPayment = amount - 467500 * 0.36 + 110739;\r\n      setTaxBracket(0.36);\r\n    }\r\n    // 39%\r\n    if (amount > 613601 && amount < 782200) {\r\n      totalTaxPayment = amount - 613600 * 0.39 + 163335;\r\n      setTaxBracket(0.39);\r\n    }\r\n    // 41%\r\n    if (amount > 782201 && amount < 1656600) {\r\n      totalTaxPayment = amount - 782200 * 0.41 + 229089;\r\n      setTaxBracket(0.41);\r\n    }\r\n    // 45%\r\n    if (amount > 1656601) {\r\n      totalTaxPayment = amount * 0.45 + 587593;\r\n      setTaxBracket(0.45);\r\n    }\r\n\r\n    if (buttonState) {\r\n      setCount(totalTaxPayment / 12);\r\n    }\r\n    if (!buttonState) {\r\n      setCount(totalTaxPayment);\r\n    }\r\n  };\r\n\r\n  // let buttonState = true;\r\n\r\n  const buttonHandler = (e) => {\r\n    // buttonState = !buttonState;\r\n    setButtonState(!buttonState);\r\n    console.log(buttonState);\r\n    // setCount(count / 12);\r\n    // console.log(count);\r\n    e.preventDefault();\r\n\r\n    if (buttonState) {\r\n      setCount(count * 12);\r\n    } else setCount(count / 12);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>Income Tax Calculator</h1>\r\n      </header>\r\n      <Tax />\r\n\r\n      {!count && <h1>Enter Income and Submit </h1>}\r\n      {taxBracket && (\r\n        <div>\r\n          <h2>\r\n            Your tax Bracket is {taxBracket * 100}%, tax needing to be paid per\r\n            a year is R{count * 12}\r\n          </h2>\r\n          <h2>\r\n            Your gross monthly salary is R\r\n            {(totalEarnings / 12).toLocaleString('en-US')} your take home\r\n            monthly salary is R\r\n            {(totalEarnings / 12 - count).toLocaleString('en-US')}\r\n          </h2>\r\n        </div>\r\n      )}\r\n\r\n      {count && (\r\n        <h2>\r\n          Annual Earning is <br /> R{totalEarnings}\r\n        </h2>\r\n      )}\r\n      <form>\r\n        <input\r\n          onChange={inputHandler}\r\n          type=\"number\"\r\n          className=\"todo-input\"\r\n          placeholder=\"Monthly Salary\"\r\n        />\r\n\r\n        {/* <button className=\"todo-button\" type=\"submit\" onClick={buttonHandler}> */}\r\n        {/* {buttonState ? <i>Switch to Annual</i> : <i>Switch to Monthly</i>} */}\r\n        {/* </button> */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}