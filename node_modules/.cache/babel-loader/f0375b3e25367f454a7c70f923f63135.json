{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Users/dndle/Desktop/taxcalculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./App.css';import Tax from'./components/tax_logic.jsx';function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),taxBracket=_useState2[0],setTaxBracket=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),totalEarnings=_useState4[0],setTotalEarnings=_useState4[1];var inputHandler=function inputHandler(e){var rawInputData=e.target.value;taxCalcs(rawInputData*12);setTotalEarnings(rawInputData.toLocaleString('en-US'));};// let annualEarnings = '';\nvar taxCalcs=function taxCalcs(annualEarnings){var totalTaxPayment='';// Tax Rates Based on 2022 rates.\n// 18%\nif(annualEarnings>1&&annualEarnings<216200){totalTaxPayment=annualEarnings*0.18;setTaxBracket(0.18);}// 26%\nif(annualEarnings>216201&&annualEarnings<337800){totalTaxPayment=(annualEarnings-216200)*0.26+38916;setTaxBracket(0.26);}// 31%\nif(annualEarnings>337801&&annualEarnings<467500){totalTaxPayment=(annualEarnings-337800)*0.31+70532;setTaxBracket(0.31);}// 36%\nif(annualEarnings>467501&&annualEarnings<613600){totalTaxPayment=annualEarnings-467500*0.36+110739;setTaxBracket(0.36);}// 39%\nif(annualEarnings>613601&&annualEarnings<782200){totalTaxPayment=annualEarnings-613600*0.39+163335;setTaxBracket(0.39);}// 41%\nif(annualEarnings>782201&&annualEarnings<1656600){totalTaxPayment=annualEarnings-782200*0.41+229089;setTaxBracket(0.41);}// 45%\nif(annualEarnings>1656601){totalTaxPayment=annualEarnings*0.45+587593;setTaxBracket(0.45);}};var yearlyEarning=totalEarnings*12;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Income Tax Calculator \"})}),/*#__PURE__*/_jsx(Tax,{}),!totalEarnings&&/*#__PURE__*/_jsx(\"h1\",{children:\"Enter Income\"}),taxBracket&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Your tax bracket is \",taxBracket*100,\"%, tax needing to be paid per a year is R\",yearlyEarning*taxBracket]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Your take home monthly salary R\",(totalEarnings-totalEarnings*taxBracket).toLocaleString('en-US')]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"You pay R\",(totalEarnings*taxBracket).toLocaleString('en-US'),\" in tax per month\"]})]}),totalEarnings&&/*#__PURE__*/_jsxs(\"h2\",{children:[\"Annual Earning is R\",yearlyEarning]}),/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsx(\"input\",{onChange:inputHandler,type:\"number\",className:\"todo-input\",placeholder:\"Monthly Salary\"})})]});}export default App;","map":{"version":3,"sources":["C:/Users/dndle/Desktop/taxcalculator/src/App.js"],"names":["React","useState","Tax","App","taxBracket","setTaxBracket","totalEarnings","setTotalEarnings","inputHandler","e","rawInputData","target","value","taxCalcs","toLocaleString","annualEarnings","totalTaxPayment","yearlyEarning"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Tax from './components/tax_logic.jsx';\r\n\r\nfunction App() {\r\n  const [taxBracket, setTaxBracket] = useState(null);\r\n  const [totalEarnings, setTotalEarnings] = useState(null);\r\n\r\n  const inputHandler = (e) => {\r\n    const rawInputData = e.target.value;\r\n    taxCalcs(rawInputData * 12);\r\n    setTotalEarnings(rawInputData.toLocaleString('en-US'));\r\n  };\r\n\r\n  // let annualEarnings = '';\r\n\r\n  const taxCalcs = (annualEarnings) => {\r\n    let totalTaxPayment = '';\r\n    // Tax Rates Based on 2022 rates.\r\n\r\n    // 18%\r\n    if (annualEarnings > 1 && annualEarnings < 216200) {\r\n      totalTaxPayment = annualEarnings * 0.18;\r\n      setTaxBracket(0.18);\r\n    }\r\n    // 26%\r\n    if (annualEarnings > 216201 && annualEarnings < 337800) {\r\n      totalTaxPayment = (annualEarnings - 216200) * 0.26 + 38916;\r\n      setTaxBracket(0.26);\r\n    }\r\n    // 31%\r\n    if (annualEarnings > 337801 && annualEarnings < 467500) {\r\n      totalTaxPayment = (annualEarnings - 337800) * 0.31 + 70532;\r\n      setTaxBracket(0.31);\r\n    }\r\n    // 36%\r\n    if (annualEarnings > 467501 && annualEarnings < 613600) {\r\n      totalTaxPayment = annualEarnings - 467500 * 0.36 + 110739;\r\n      setTaxBracket(0.36);\r\n    }\r\n    // 39%\r\n    if (annualEarnings > 613601 && annualEarnings < 782200) {\r\n      totalTaxPayment = annualEarnings - 613600 * 0.39 + 163335;\r\n      setTaxBracket(0.39);\r\n    }\r\n    // 41%\r\n    if (annualEarnings > 782201 && annualEarnings < 1656600) {\r\n      totalTaxPayment = annualEarnings - 782200 * 0.41 + 229089;\r\n      setTaxBracket(0.41);\r\n    }\r\n    // 45%\r\n    if (annualEarnings > 1656601) {\r\n      totalTaxPayment = annualEarnings * 0.45 + 587593;\r\n      setTaxBracket(0.45);\r\n    }\r\n  };\r\n\r\n  const yearlyEarning = totalEarnings * 12;\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>Income Tax Calculator </h1>\r\n      </header>\r\n      <Tax />\r\n\r\n      {!totalEarnings && <h1>Enter Income</h1>}\r\n      {taxBracket && (\r\n        <div>\r\n          <h2>\r\n            Your tax bracket is {taxBracket * 100}%, tax needing to be paid per\r\n            a year is R{yearlyEarning * taxBracket}\r\n          </h2>\r\n          <h2>\r\n            Your take home monthly salary R\r\n            {(totalEarnings - totalEarnings * taxBracket).toLocaleString(\r\n              'en-US'\r\n            )}\r\n          </h2>\r\n          <h2>\r\n            You pay R{(totalEarnings * taxBracket).toLocaleString('en-US')} in\r\n            tax per month\r\n          </h2>\r\n        </div>\r\n      )}\r\n\r\n      {totalEarnings && <h2>Annual Earning is R{yearlyEarning}</h2>}\r\n      <form>\r\n        <input\r\n          onChange={inputHandler}\r\n          type=\"number\"\r\n          className=\"todo-input\"\r\n          placeholder=\"Monthly Salary\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}