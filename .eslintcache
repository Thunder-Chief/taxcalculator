[{"C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\index.js":"1","C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\App.js":"2","C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\reportWebVitals.js":"3","C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\components\\tax_logic.jsx":"4"},{"size":769,"mtime":1633515147671,"results":"5","hashOfConfig":"6"},{"size":2839,"mtime":1633006583901,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1632411334278,"results":"8","hashOfConfig":"6"},{"size":1308,"mtime":1632411334277,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3lzj9m",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"15"},"C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\index.js",[],"C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\App.js",["21"],"import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Tax from './components/tax_logic.jsx';\r\n\r\nfunction App() {\r\n  const [taxBracket, setTaxBracket] = useState(null);\r\n  const [totalEarnings, setTotalEarnings] = useState(null);\r\n\r\n  const inputHandler = (e) => {\r\n    const rawInputData = e.target.value;\r\n    taxCalcs(rawInputData * 12);\r\n    setTotalEarnings(rawInputData.toLocaleString('en-US'));\r\n  };\r\n\r\n  // let annualEarnings = '';\r\n\r\n  const taxCalcs = (annualEarnings) => {\r\n    let totalTaxPayment = '';\r\n    // Tax Rates Based on 2022 rates.\r\n\r\n    // 18%\r\n    if (annualEarnings > 1 && annualEarnings < 216200) {\r\n      totalTaxPayment = annualEarnings * 0.18;\r\n      setTaxBracket(0.18);\r\n    }\r\n    // 26%\r\n    if (annualEarnings > 216201 && annualEarnings < 337800) {\r\n      totalTaxPayment = (annualEarnings - 216200) * 0.26 + 38916;\r\n      setTaxBracket(0.26);\r\n    }\r\n    // 31%\r\n    if (annualEarnings > 337801 && annualEarnings < 467500) {\r\n      totalTaxPayment = (annualEarnings - 337800) * 0.31 + 70532;\r\n      setTaxBracket(0.31);\r\n    }\r\n    // 36%\r\n    if (annualEarnings > 467501 && annualEarnings < 613600) {\r\n      totalTaxPayment = annualEarnings - 467500 * 0.36 + 110739;\r\n      setTaxBracket(0.36);\r\n    }\r\n    // 39%\r\n    if (annualEarnings > 613601 && annualEarnings < 782200) {\r\n      totalTaxPayment = annualEarnings - 613600 * 0.39 + 163335;\r\n      setTaxBracket(0.39);\r\n    }\r\n    // 41%\r\n    if (annualEarnings > 782201 && annualEarnings < 1656600) {\r\n      totalTaxPayment = annualEarnings - 782200 * 0.41 + 229089;\r\n      setTaxBracket(0.41);\r\n    }\r\n    // 45%\r\n    if (annualEarnings > 1656601) {\r\n      totalTaxPayment = annualEarnings * 0.45 + 587593;\r\n      setTaxBracket(0.45);\r\n    }\r\n  };\r\n\r\n  const yearlyEarning = totalEarnings * 12;\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>Income Tax Calculator </h1>\r\n      </header>\r\n      <Tax />\r\n\r\n      {!totalEarnings && <h1>Enter Income</h1>}\r\n      {taxBracket && (\r\n        <div>\r\n          <h2>\r\n            Your tax bracket is {taxBracket * 100}%, tax needing to be paid per\r\n            a year is R{yearlyEarning * taxBracket}\r\n          </h2>\r\n          <h2>\r\n            Your take home monthly salary R\r\n            {(totalEarnings - totalEarnings * taxBracket).toLocaleString(\r\n              'en-US'\r\n            )}\r\n          </h2>\r\n          <h2>\r\n            You pay R{(totalEarnings * taxBracket).toLocaleString('en-US')} in\r\n            tax per month\r\n          </h2>\r\n        </div>\r\n      )}\r\n\r\n      {totalEarnings && <h2>Annual Earning is R{yearlyEarning}</h2>}\r\n      <form>\r\n        <input\r\n          onChange={inputHandler}\r\n          type=\"number\"\r\n          className=\"todo-input\"\r\n          placeholder=\"Monthly Salary\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["22","23"],"C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\reportWebVitals.js",[],"C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\components\\tax_logic.jsx",["24","25","26","27"],"import React, { useState } from 'react';\r\n\r\nexport default function Tax() {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [count, setCount] = useState(0);\r\n\r\n\r\nconst amount = '';\r\nlet totalTaxPayment = '';\r\n\r\nconst taxCalcs = (inputAmount) => {\r\n\r\n  // Tax Rates Based on 2022 rates. \r\n\r\n  // 18%\r\n  if(amount > 1 && amount < 216200) {\r\n    totalTaxPayment = amount * 0.18 \r\n    \r\n    }\r\n    // 26%\r\n    if(amount > 216201 && amount < 337800){\r\n      totalTaxPayment = amount - 216200 * 0.18 + 38916 \r\n    }\r\n    // 31%\r\n    if(amount > 337801 && amount < 467500){\r\n      totalTaxPayment = amount - 337800 * 0.31 + 70532 \r\n    }\r\n    // 36%\r\n    if(amount > 467501 && amount < 613600){\r\n      totalTaxPayment = amount - 467500 * 0.36 + 110739 \r\n    }\r\n    // 39%\r\n    if(amount > 613601 && amount < 782200){\r\n      totalTaxPayment = amount - 613600 * 0.39 + 163335 \r\n    }\r\n    // 41%\r\n    if(amount > 782201 && amount < 1656600){\r\n      totalTaxPayment = amount - 782200 * 0.41 + 229089 \r\n    }\r\n    // 45%\r\n    if(amount > 1656601){\r\n      totalTaxPayment = amount * 0.45 + 587593 \r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Click me\r\n      </button> */}\r\n    </div>\r\n  );\r\n}",{"ruleId":"28","severity":1,"message":"29","line":53,"column":7,"nodeType":"30","messageId":"31","endLine":53,"endColumn":22},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"28","severity":1,"message":"36","line":5,"column":10,"nodeType":"30","messageId":"31","endLine":5,"endColumn":15},{"ruleId":"28","severity":1,"message":"37","line":5,"column":17,"nodeType":"30","messageId":"31","endLine":5,"endColumn":25},{"ruleId":"28","severity":1,"message":"38","line":11,"column":7,"nodeType":"30","messageId":"31","endLine":11,"endColumn":15},{"ruleId":"28","severity":1,"message":"29","line":42,"column":7,"nodeType":"30","messageId":"31","endLine":42,"endColumn":22},"no-unused-vars","'totalTaxPayment' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["39"],"no-negated-in-lhs",["40"],"'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'taxCalcs' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]