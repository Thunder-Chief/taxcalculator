[{"C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\index.js":"1","C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\App.js":"2","C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\reportWebVitals.js":"3","C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\components\\tax_logic.jsx":"4"},{"size":517,"mtime":1632411334278,"results":"5","hashOfConfig":"6"},{"size":2839,"mtime":1633006583901,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1632411334278,"results":"8","hashOfConfig":"6"},{"size":1308,"mtime":1632411334277,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"3lzj9m",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\index.js",[],["20","21"],"C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\App.js",["22"],"C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\reportWebVitals.js",[],"C:\\Users\\dndle\\Desktop\\taxcalculator\\src\\components\\tax_logic.jsx",["23","24","25","26"],"import React, { useState } from 'react';\r\n\r\nexport default function Tax() {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [count, setCount] = useState(0);\r\n\r\n\r\nconst amount = '';\r\nlet totalTaxPayment = '';\r\n\r\nconst taxCalcs = (inputAmount) => {\r\n\r\n  // Tax Rates Based on 2022 rates. \r\n\r\n  // 18%\r\n  if(amount > 1 && amount < 216200) {\r\n    totalTaxPayment = amount * 0.18 \r\n    \r\n    }\r\n    // 26%\r\n    if(amount > 216201 && amount < 337800){\r\n      totalTaxPayment = amount - 216200 * 0.18 + 38916 \r\n    }\r\n    // 31%\r\n    if(amount > 337801 && amount < 467500){\r\n      totalTaxPayment = amount - 337800 * 0.31 + 70532 \r\n    }\r\n    // 36%\r\n    if(amount > 467501 && amount < 613600){\r\n      totalTaxPayment = amount - 467500 * 0.36 + 110739 \r\n    }\r\n    // 39%\r\n    if(amount > 613601 && amount < 782200){\r\n      totalTaxPayment = amount - 613600 * 0.39 + 163335 \r\n    }\r\n    // 41%\r\n    if(amount > 782201 && amount < 1656600){\r\n      totalTaxPayment = amount - 782200 * 0.41 + 229089 \r\n    }\r\n    // 45%\r\n    if(amount > 1656601){\r\n      totalTaxPayment = amount * 0.45 + 587593 \r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Click me\r\n      </button> */}\r\n    </div>\r\n  );\r\n}",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":53,"column":7,"nodeType":"33","messageId":"34","endLine":53,"endColumn":22},{"ruleId":"31","severity":1,"message":"35","line":5,"column":10,"nodeType":"33","messageId":"34","endLine":5,"endColumn":15},{"ruleId":"31","severity":1,"message":"36","line":5,"column":17,"nodeType":"33","messageId":"34","endLine":5,"endColumn":25},{"ruleId":"31","severity":1,"message":"37","line":11,"column":7,"nodeType":"33","messageId":"34","endLine":11,"endColumn":15},{"ruleId":"31","severity":1,"message":"32","line":42,"column":7,"nodeType":"33","messageId":"34","endLine":42,"endColumn":22},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'totalTaxPayment' is assigned a value but never used.","Identifier","unusedVar","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'taxCalcs' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]