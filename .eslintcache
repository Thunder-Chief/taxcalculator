[{"C:\\Users\\dndle\\Desktop\\Tax\\src\\index.js":"1","C:\\Users\\dndle\\Desktop\\Tax\\src\\reportWebVitals.js":"2","C:\\Users\\dndle\\Desktop\\Tax\\src\\App.js":"3","C:\\Users\\dndle\\Desktop\\Tax\\src\\components\\tax_logic.jsx":"4"},{"size":500,"mtime":499155300000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499155300000,"results":"7","hashOfConfig":"6"},{"size":2454,"mtime":1628696835345,"results":"8","hashOfConfig":"6"},{"size":1251,"mtime":1628686755344,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"d2hk0u",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\dndle\\Desktop\\Tax\\src\\index.js",[],["20","21"],"C:\\Users\\dndle\\Desktop\\Tax\\src\\reportWebVitals.js",[],"C:\\Users\\dndle\\Desktop\\Tax\\src\\App.js",[],"C:\\Users\\dndle\\Desktop\\Tax\\src\\components\\tax_logic.jsx",["22","23","24","25"],"import React, { useState } from 'react';\n\nexport default function Tax() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n\n\nconst amount = '';\nlet totalTaxPayment = '';\n\nconst taxCalcs = (inputAmount) => {\n\n  // Tax Rates Based on 2022 rates. \n\n  // 18%\n  if(amount > 1 && amount < 216200) {\n    totalTaxPayment = amount * 0.18 \n    \n    }\n    // 26%\n    if(amount > 216201 && amount < 337800){\n      totalTaxPayment = amount - 216200 * 0.18 + 38916 \n    }\n    // 31%\n    if(amount > 337801 && amount < 467500){\n      totalTaxPayment = amount - 337800 * 0.31 + 70532 \n    }\n    // 36%\n    if(amount > 467501 && amount < 613600){\n      totalTaxPayment = amount - 467500 * 0.36 + 110739 \n    }\n    // 39%\n    if(amount > 613601 && amount < 782200){\n      totalTaxPayment = amount - 613600 * 0.39 + 163335 \n    }\n    // 41%\n    if(amount > 782201 && amount < 1656600){\n      totalTaxPayment = amount - 782200 * 0.41 + 229089 \n    }\n    // 45%\n    if(amount > 1656601){\n      totalTaxPayment = amount * 0.45 + 587593 \n    }\n\n  }\n\n\n\n\n  return (\n    <div>\n      {/* <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button> */}\n    </div>\n  );\n}",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":5,"column":10,"nodeType":"32","messageId":"33","endLine":5,"endColumn":15},{"ruleId":"30","severity":1,"message":"34","line":5,"column":17,"nodeType":"32","messageId":"33","endLine":5,"endColumn":25},{"ruleId":"30","severity":1,"message":"35","line":11,"column":7,"nodeType":"32","messageId":"33","endLine":11,"endColumn":15},{"ruleId":"30","severity":1,"message":"36","line":42,"column":7,"nodeType":"32","messageId":"33","endLine":42,"endColumn":22},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'count' is assigned a value but never used.","Identifier","unusedVar","'setCount' is assigned a value but never used.","'taxCalcs' is assigned a value but never used.","'totalTaxPayment' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]